name: Build, Push and Update Manifests

on:
  push:
    branches: [main, develop]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      service_changes: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7
      - name: Detect changed services
        uses: dorny/paths-filter@v3.0.2
        id: filter
        with:
          filters: |
            frontend:
              - 'k-animator-project/frontend/**'
            auth:
              - 'k-animator-project/auth/**'
            modelapi:
              - 'k-animator-project/modelapi/**'
            model_worker:
              - 'k-animator-project/model_worker/**'
            utils:
              - 'k-animator-project/utils/**'
            gptapi:
              - 'k-animator-project/gptapi/**'
            gptworker:
              - 'k-animator-project/gptworker/**'
            layerworker:
              - 'k-animator-project/layerworker/**'

  build-push-update:
    needs: changes
    if: ${{ needs.changes.outputs.service_changes != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.changes.outputs.service_changes) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7
        with:
          token: ${{ secrets.WOOSUNG142 }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0

      - name: Login to GHCR
        uses: docker/login-action@v3.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.WOOSUNG142 }}

      - name: Generate Docker tags
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ghcr.io/${{ github.repository_owner }}/k-animator/${{ matrix.service }}
          tags: |
            type=raw,value=main,enable=${{ github.ref_name == 'main' }}
            type=raw,value=develop,enable=${{ github.ref_name == 'develop' }}
            type=sha,format=short

      - name: Set Docker build context
        id: set-context
        run: |
          echo "path=k-animator-project/${{ matrix.service }}" >> $GITHUB_OUTPUT

      - name: Get short SHA
        run: echo "SHORT_SHA=$(echo '${{ github.sha }}' | cut -c1-7)" >> $GITHUB_ENV

      - name: Build and Push image to GHCR
        id: build
        uses: docker/build-push-action@v6.5.0
        with:
          context: ./k-animator-project
          file: ./${{ steps.set-context.outputs.path }}/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/k-animator/${{ matrix.service }}:${{ github.ref_name }}
            ghcr.io/${{ github.repository_owner }}/k-animator/${{ matrix.service }}:${{ github.ref_name }}-${{ env.SHORT_SHA }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Update Kustomize Manifest
        if: github.ref_name == 'main' || github.ref_name == 'develop'
        run: |
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          export IMAGE_TAG="${{ github.ref_name }}-${SHORT_SHA}"

          if [[ -z "${IMAGE_TAG}" ]]; then
            echo "Error: IMAGE_TAG is empty. Aborting."
            exit 1
          fi

          if [[ "${{ github.ref_name }}" == "main" ]]; then
            KUSTOMIZE_PATH="k8s/manifests/overlays/production/kustomization.yaml"
          else
            KUSTOMIZE_PATH="k8s/manifests/overlays/development/kustomization.yaml"
          fi

          echo "Updating ${KUSTOMIZE_PATH} for ${{ matrix.service }} with tag ${IMAGE_TAG}"

          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          git fetch origin ${{ github.ref_name }}
          git reset --hard origin/${{ github.ref_name }}
          
          wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          chmod a+x /usr/local/bin/yq
          yq e '(.images[] | select(.name | test("ghcr.io/${{ github.repository_owner }}/k-animator/${{ matrix.service }}")) | .newTag) = strenv(IMAGE_TAG)' -i ${KUSTOMIZE_PATH}

          git add ${KUSTOMIZE_PATH}
          git commit -m "ci: Update ${{ matrix.service }} image to tag ${IMAGE_TAG} [skip ci]" || echo "No changes to commit"
          git push