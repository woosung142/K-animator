name: Build and Push to GHCR

on:
  push:
    branches: [main, 'feature/*']

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      service_changes: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7

      - name: Detect changed services
        uses: dorny/paths-filter@v3.0.2
        id: filter
        with:
          filters: |
            web:
              - 'web/**'
            model-api:
              - 'model-api/**'
            model-worker:
              - 'model-worker/**'

  build-push:
    needs: changes
    if: ${{ needs.changes.outputs.service_changes != '[]' }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: ${{ fromJson(needs.changes.outputs.service_changes) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.3.0

      - name: Login to GHCR
        uses: docker/login-action@v3.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.WOOSUNG142 }}

      - name: Generate Docker tags
        id: meta
        uses: docker/metadata-action@v5.0.0
        with:
          images: ghcr.io/${{ github.repository_owner }}/k-animator/${{ matrix.service }}
          tags: |
            type=raw,value=main,enable=${{ github.ref_name == 'main' }}
            type=ref,event=branch,enable=${{ startsWith(github.ref_name, 'feature/') }}
            type=sha,format=short

      - name: Build and Push image to GHCR
        uses: docker/build-push-action@v6.5.0
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

